(function(){"use strict";function x(e){throw new Error(`Should not reach this with value ${e}`)}function C(e,s){const r=new Set;function o(c){r.has(c)||(s(c,o),r.add(c))}e.forEach(o)}function M(e,s,r,o,c=""){let l=1,t="'use strict';"+c+";const x0=0";const d=new Map;return C(e,(a,p)=>{const n=`x${l++}`;d.set(a,n);const{op:f,x:m,br:g}=a;m.forEach(p),g.forEach(p);const i=m.map(h=>d.get(h)),$=g.map(h=>d.get(h));switch(f){case"const":d.set(a,typeof a.ex!="string"?`(${a.ex})`:`('${a.ex}')`);break;case"sum":case"prod":t+=`,${n}=`,i.length?t+=i.join(f=="sum"?"+":"*"):t+=f=="sum"?0:1;break;case"min":case"max":t+=`,${n}=Math.${f}(${i})`;break;case"sumfrac":t+=`,${n}=${i[0]}/(${i[0]} + ${i[1]})`;break;case"match":t+=`,${n}=${$[0]}===${$[1]}?${i[0]}:${i[1]}`;break;case"thres":t+=`,${n}=${$[0]}>=${$[1]}?${i[0]}:${i[1]}`;break;case"subscript":t+=`,${n}=${JSON.stringify(a.ex)}[${$[0]}]`;break;case"read":{const h=a.tag[s];let b=[...new Array(r)].map((I,_)=>`(b[${_}]['${h}'] ?? 0)`);o[h]&&(b=[o[h].toString(),...b]),t+=`,${n}=${b.join("+")}`;break}case"custom":t+=`,${n}=${a.ex}(${i})`;break;case"lookup":t+=`,${n}=([${i}])[(${JSON.stringify(a.ex)})[${$[0]}] ?? 0]`;break;default:x(f)}}),t+=`;return [${e.map(a=>d.get(a))}]`,new Function("b",t)}const y=5e4,B=2e5;let S,k,u,w=[];onmessage=async e=>{try{await N(e)}catch(s){console.error(s),postMessage({resultType:"err",message:JSON.stringify(s)})}};async function N(e){const{data:s}=e,{command:r}=s;switch(r){case"init":v(s);break;case"start":await T();break}}async function v({lightConeStats:e,relicStatsBySlot:s,detachedNodes:r,constraints:o}){S=M(r,"q",7,{}),k=e,u=s,w=o,postMessage({resultType:"initialized"})}function*E(){for(const e of k)for(const s of u.head)for(const r of u.hands)for(const o of u.feet)for(const c of u.body)for(const l of u.sphere)for(const t of u.rope)yield{lightCone:e,head:s,hands:r,feet:o,body:c,sphere:l,rope:t}}async function T(){let e=[],s=0;function r(){const o=e.length;e.length>y&&(e.sort((c,l)=>l.value-c.value),e=e.slice(0,y)),postMessage({resultType:"results",builds:e,numBuildsComputed:o+s}),e=[],s=0}for(const{lightCone:o,head:c,hands:l,feet:t,body:d,sphere:a,rope:p}of E()){const n=S([o.stats,c.stats,l.stats,t.stats,d.stats,a.stats,p.stats]);w.every(({value:f,isMax:m},g)=>m?n[g+1]<=f:n[g+1]>=f)?e.push({value:n[0],lightConeId:o.id,relicIds:{head:c.id,hands:l.id,feet:t.id,body:d.id,sphere:a.id,rope:p.id}}):s++,e.length>B&&r()}e.length>0&&r(),postMessage({resultType:"done"})}})();
